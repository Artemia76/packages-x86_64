description="Free version of the SSH connectivity tools"
url="http://www.openssh.org/"

contributors="Pierre B"
packager="tnut <tnut@nutyx.org>"

makedepends=(openssl libedit)

name=openssh
version=8.2p1
nutyx_version=11.4
release=2

source=(https://downloads.tuxfamily.org/nutyx/files/nutyx-${nutyx_version}.tar.xz
	https://ftp.openbsd.org/pub/OpenBSD/OpenSSH/portable/$name-$version.tar.gz)

prepare() {
groupadd -g 50 sshd
useradd  -c 'sshd PrivSep' \
         -d /var/lib/sshd  \
         -g sshd           \
         -s /bin/false     \
         -u 50 sshd
}
build() {
unset MAKEFLAGS
cd $name-$version

install -v -m700 -d $PKG/var/lib/sshd

chown -v root:sys $PKG/var/lib/sshd

./configure --prefix=/usr \
--sysconfdir=/etc/ssh \
--datadir=/usr/share/sshd \
--with-md5-passwords \
--with-privsep-path=/var/lib/sshd \
--with-libedit \
--mandir=/usr/share/man \
--infodir=/usr/share/info

make DESTDIR=$PKG install

if [ -f /etc/pam.d/login ]; then
	mkdir -p $PKG/etc/pam.d
	sed 's@d/login@d/sshd@g' /etc/pam.d/login > $PKG/etc/pam.d/sshd
	chmod 644 $PKG/etc/pam.d/sshd
fi

install -v -m755 contrib/ssh-copy-id $PKG/usr/bin
install -v -m644 contrib/ssh-copy-id.1 \
$PKG/usr/share/man/man1

install -v -m755 -d $PKG/usr/share/doc/$name-$version
install -v -m644 INSTALL LICENCE OVERVIEW README* \
$PKG/usr/share/doc/$name-$version

# Configurations files
mv $PKG/etc/ssh/ssh_config{,.default}
mv $PKG/etc/ssh/sshd_config{,.default}

#
## Services
#

# SysV
cd $SRC/nutyx-${nutyx_version}
make DESTDIR=$PKG install-sshd

# runit
SERVICEDIR=/lib/init/services/sshd
mkdir -p $PKG$SERVICEDIR/log
cat >  $PKG$SERVICEDIR/run << "EOF"
#!/bin/sh
exec 2>&1
ssh-keygen -A >/dev/null 2>&1
exec /usr/sbin/sshd -D -e
pid=$(cat /run/sshd.pid 2>/dev/null)
echo "-16" >/proc/${pid}/oom_score_adj >/dev/null
EOF
cat >  $PKG$SERVICEDIR/log/run << "EOF"
#!/bin/sh
[ -d /var/log/sshd ] || mkdir -p /var/log/sshd
exec /sbin/svlogd -tt /var/log/sshd
EOF
chmod 755 $PKG$SERVICEDIR/{run,log/run}
mkdir -p $PKG/etc/init/default
ln -sv /lib/init/services/sshd $PKG/etc/init/default/sshd

# SystemD
UNITSDIR=/lib/systemd/system
mkdir -p $PKG$UNITSDIR
cat > $PKG$UNITSDIR/sshd.service << "EOF"
[Unit]
Description=OpenSSH Daemon
Wants=sshdgenkeys.service
After=sshdgenkeys.service
After=network.target

[Service]
ExecStart=/usr/sbin/sshd -D
ExecReload=/bin/kill -HUP $MAINPID
KillMode=process
Restart=always

[Install]
WantedBy=multi-user.target
EOF

cat > $PKG$UNITSDIR/sshdgenkeys.service << "EOF"
[Unit]
Description=SSH Key Generation
ConditionPathExists=|!/etc/ssh/ssh_host_dsa_key
ConditionPathExists=|!/etc/ssh/ssh_host_dsa_key.pub
ConditionPathExists=|!/etc/ssh/ssh_host_ecdsa_key
ConditionPathExists=|!/etc/ssh/ssh_host_ecdsa_key.pub
ConditionPathExists=|!/etc/ssh/ssh_host_ed25519_key
ConditionPathExists=|!/etc/ssh/ssh_host_ed25519_key.pub
ConditionPathExists=|!/etc/ssh/ssh_host_rsa_key
ConditionPathExists=|!/etc/ssh/ssh_host_rsa_key.pub

[Service]
ExecStart=/usr/bin/ssh-keygen -A
Type=oneshot
RemainAfterExit=yes
EOF

cat > $PKG$UNITSDIR/sshdat.service << "EOF"
[Unit]
Description=SSH Per-Connection Server
After=sshdgenkeys.service

[Service]
ExecStart=/usr/sbin/sshd -i
StandardInput=socket
StandardError=syslog
KillMode=process
EOF

cat > $PKG$UNITSDIR/sshd.socket << "EOF"
[Unit]
Conflicts=sshd.service
Wants=sshdgenkeys.service

[Socket]
ListenStream=22
Accept=yes

[Install]
WantedBy=sockets.target
EOF
chmod 644 $PKG$UNITSDIR/{sshd.socket,{sshd,sshdgenkeys,sshdat}.service}
}
service() {
cd $PKG
bsdtar -r -f \
$PKGMK_PACKAGE_DIR/${name}.${group}${PKGMK_BUILDVER}any.${PKGMK_PACKAGE_EXT} \
etc/rc.d etc/ssh/sshd_config.default var usr/sbin etc/init/default lib/init \
lib/systemd
rm -r etc/rc.d etc/ssh/sshd_config.default var usr/sbin etc/init/default lib/init \
lib/systemd
}
