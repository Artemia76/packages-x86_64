# Depends on: icu libvpx libevent rustc autoconf2-13 pulseaudio gconf yasm sqlite libvpx libevent nss alsa-lib gtk2 gtk3 zip unzip gstreamer gstreamer-plugins-base gstreamer-plugins-good gstreamer-plugins-libav

description="Standalone web browser from mozilla.org"
url="http://www.mozilla.com/firefox/"
packager="tnut <tnut@nutyx.org>"
contributors="Pierre B"

name=firefox
version=56.0.2

source=( https://ftp.mozilla.org/pub/mozilla.org/firefox/releases/$version/source/firefox-$version.source.tar.xz)

build() {

cd $SRC
ARCH=`uname -m`

for lang in da de es-ES fi fr it nb-NO nl pt-PT ru sv-SE tr
do 
wget  http://download.cdn.mozilla.net/pub/mozilla.org/firefox/releases/$version/linux-$ARCH/xpi/$lang.xpi
done

cd $name-$version
# Locale autodetect
sed -i '/intl.locale.matchOS/s/false/true/' modules/libpref/init/all.js

cat > mozconfig << "EOF"
# If you have a multicore machine, all cores will be used by default.
# If desired, you can reduce the number of cores used, e.g. to 1, by
# uncommenting the next line and setting a valid number of CPU cores.
#mk_add_options MOZ_MAKE_FLAGS="-j1"

# If you have installed dbus-glib, comment out this line:
ac_add_options --disable-dbus

# If you have installed dbus-glib, and you have installed (or will install)
# wireless-tools, and you wish to use geolocation web services, comment out
# this line
ac_add_options --disable-necko-wifi

# Uncomment this option if you wish to build with gtk+-2
#ac_add_options --enable-default-toolkit=cairo-gtk2

# Uncomment these lines if you have installed optional dependencies:
#ac_add_options --enable-system-hunspell
#ac_add_options --enable-startup-notification

# Comment out following option if you have PulseAudio installed
# ac_add_options --disable-pulseaudio

# If you have installed GConf, comment out this line
ac_add_options --disable-gconf

# Stylo is the new CSS code, including the rust 'style'
# package. It is enabled by default, but cannot find the
# headers for system nspr, pixman. If you enable stylo you
# must comment out system-nspr system-pixman and
# system-cairo, and you must also have installed clang.
ac_add_options --disable-stylo

# Comment out following options if you have not installed
# recommended dependencies:
ac_add_options --enable-system-sqlite
ac_add_options --with-system-libevent
ac_add_options --with-system-libvpx
ac_add_options --with-system-nspr
ac_add_options --with-system-nss
ac_add_options --with-system-icu

# If you are going to apply the patch for system graphite
# and system harfbuzz, uncomment these lines:
#ac_add_options --with-system-graphite2
#ac_add_options --with-system-harfbuzz

# Stripping is now enabled by default.
# Uncomment these lines if you need to run a debugger:
#ac_add_options --disable-strip
#ac_add_options --disable-install-strip

# The BLFS editors recommend not changing anything below this line:
ac_add_options --prefix=/usr
ac_add_options --enable-application=browser

ac_add_options --disable-crashreporter
ac_add_options --disable-updater
ac_add_options --disable-tests

# Optimization for size is broken with gcc7
ac_add_options --enable-optimize="-O2"


ac_add_options --enable-official-branding
ac_add_options --enable-safe-browsing
ac_add_options --enable-url-classifier

# From firefox-40, using system cairo causes firefox to crash
# frequently when it is doing background rendering in a tab.
ac_add_options --enable-system-cairo
ac_add_options --enable-system-ffi
ac_add_options --enable-system-pixman

ac_add_options --with-pthreads

ac_add_options --with-system-bz2
ac_add_options --with-system-jpeg
ac_add_options --with-system-png
ac_add_options --with-system-zlib

mk_add_options MOZ_OBJDIR=@TOPSRCDIR@/firefox-build-dir
EOF

SHELL=/bin/sh make -f client.mk

mkdir -pv $PKG/usr/{bin,lib{,/mozilla/plugins}}

SHELL=/bin/sh make -f client.mk DESTDIR=$PKG install INSTALL_SDK=

chown -R 0:0 $PKG/usr/lib/firefox-$version
ln -sf ../lib/firefox-$version/firefox $PKG/usr/bin
ln -sf ../mozilla/plugins $PKG/usr/lib/firefox-$version

# Need for gnash
mkdir -p $PKG/usr/include/npapi
cp -v dom/plugins/base/*.h $PKG/usr/include/npapi

# Launcher 
mkdir -pv $PKG/usr/share/applications &&
cat > $PKG/usr/share/applications/firefox.desktop << "EOF" &&
[Desktop Entry]
Encoding=UTF-8
Type=Application
Name=Firefox
Comment=Browse The Web
Icon=firefox
Exec=firefox
Categories=Network;GTK;Application;Browser;WebBrowser;
StartupNotify=true
Terminal=false
EOF
mkdir -pv $PKG/usr/share/pixmaps
ln -sf /usr/lib/firefox-$version/browser/icons/mozicon128.png $PKG/usr/share/pixmaps/firefox.png

for i in 16 22 24 32 48 256
do
   mkdir -p $PKG/usr/share/icons/hicolor/${i}x${i}/apps
   cp browser/branding/official/default${i}.png \
      $PKG/usr/share/icons/hicolor/${i}x${i}/apps/firefox.png
done

for lang in da de tr es-ES fi fr it nb-NO nl pt-PT sv-SE
do 
install -Dm644 $SRC/$lang.xpi \
    $PKG/usr/lib/firefox-$version/browser/extensions/langpack-$lang@firefox.mozilla.org.xpi
done

cat > $PKG/usr/lib/firefox-$version/defaults/pref/vendor.js << "EOF"
// Use LANG environment variable to choose locale
pref("intl.locale.matchOS", true);

// Disable default browser checking.
pref("browser.shell.checkDefaultBrowser", false);

// Don't disable our bundled extensions in the application directory
pref("extensions.autoDisableScopes", 11);
pref("extensions.shownSelectionUI", true);
EOF
}
