#***************************************************************************************************************************************************
# 1. INTRODUCTION
#
# This script is able to compile any ports from any official collections that are one of:
# - base
# - base-extra
# - cli
# - cli-extra
# - gui
# - gui-extra
# - gnome
# - xfce4
# - lxde
# - cinnamon
# - kde5
# - mate
# - enlightenment
#
# IMPORTANTS NOTES:
# a. We make a difference only for base, cli and gui and they -extra counterparts
#    Example: to compile the all cli-extra collection the syntax will be:
#
#    bash bin/enter-nutyx /current/cli-extra
#    As simple as that :)
#
# b. Some services are going to be activated (http (port 80), rpcbind (port 111), nfs (port 2049)
#    If your main router forward some of those ports to your machine. You need to checkit out
#
# c. You need about 10 Gbytes of free space for the mirror of NuTyX (/srv/local), another
#    10 Gbytes of free space for the /srv/remote mirror and another 6 to 8 Gbytes for your 
#    (temporary) installed NuTyX. Also aware that /srv/local/sources will continuously grow up
#    until you delete some sources packages files
#
# d. You need to have the install-nutyx script and enter-nutyx in the /root/bin directory, use a link to
#    your 'core' git
#
#    mkdir /root/bin
#    ln -sv /home/thierry/git/core/scripts/enter-nutyx /root/bin/enter-nutyx
#    ln -sv /home/thierry/git/core/scripts/install-nutyx /root/bin/install-nutyx
#
#    Adapt '/home/thierry/git/core' to the path to your 'core' git
#
# e. The installed NuTyX should ALWAYS be installed under /current or /stable. It means if you have to use
#    another (bigger) partition for example, you should use a link to it:
#    Example:
#     ln -sv /home/thierry/chroot-64/current /current
#     ln -sv /home/thierry/chroot-64/stable /stable
#
#    In this example the installed NuTyX will always endup in  /home/thierry/chroot-64/stable/xxx or
#    /home/thierry/chroot-64/current/xxx which is fine because it's another bigger partition (740 Gb about in this case)
#
# 2. HOW DOES THIS WORK ?
#
#  The script will:
#
#  - install a NuTyX current or stable (define by the first part of the first argument) into a folder (define by the first argument)
#  - install the devel packages
#  - mount the depot needed for the specific collection (define by the first argument)
#  - mount the ports needed for the specific collection
#  - mount the sources and logs folders
#  - enter (chroot) in the installed NuTyX
#  - run the script found in /tmp folder which is buildup by collecting info from arguments
#  - will compile what has to be compile with or without success but in both cases will
#  - exit the installed NuTyX
#  - umount the depot, the ports, the sources and logs folders 
#  - IF NO ERROR OCCUR at umount process will delete the current or stable NuTyX folder
#
# 3. ARGUMENTS to the enter-nutyx script.
#
# You can pass 1 or 2 arguments:
#
# Parameter 1 (mandatory):
#  It's specify the version we are going to use (currently it can be "stable" or "current"
#  and it's specify the collection which is one of following possible collection:
#
#  base, base-extra, cli, cli-extra, gui, gui-extra, cinnamon, enlightenment, gnome, lxde, kde5, mate, xfce4
#  You note that even under cinnamon (for example) we have two collection cinnamon and cinnamon-extra, even then
#  the script will automatically build both
#
# Parameter 2 (optionnal):
#  This parameter specify the port you want to build only. Currently this option works only with
#  base, base-extra, cli, cli-extra, gui, gui-extra collections.
#  Example:
#   bash bin/enter-nutyx /current/base-extra kernel
#
#  This example will build (or rebuild) the kernel binaries only
#
# 3. CONFIGURATION OF THE HOST NuTyX
#
# It's absolutly necessary to configure your NuTyX host machine properly otherwise nothing will works like expected
#
# Files that are involve in the configuration process:
#
# - /etc/install-nutyx.conf
# - /etc/fstab
# - /etc/install-nutyx.conf.d/pkgmk.conf
#
# The /etc/install-nutyx.conf file MUST specify 2 variables 
# DEPOT=/DEPOT
# URL="localhost"
#
# As explain above, we mount a lot of folder, they HAVE TO BE specify in the /etc/fstab
# As we used predefined folder (/DEPOT, /sources) we can specify them in /etc/fstab
#
# Example for the cli-extra collection of the current version specify following lines
#
#  localhost:/srv/local/sources /current/cli-extra/sources nfs noauto,rw,vers=3,_netdev,rsize=8192,wsize=8192 0 0
#  localhost:/srv/local/current/x86_64 /current/cli-extra/DEPOT nfs noauto,rw,vers=3,_netdev,rsize=8192,wsize=8192 0 0
#  localhost:/home/thierry/git/extra /current/cli-extra/root/extra nfs noauto,rw,vers=3,_netdev,rsize=8192,wsize=8192 0 0
#  localhost:/srv/local/logs/current/x86_64/cli-extra /current/cli-extra/var/log/pkgbuild nfs noauto,rw,vers=3,_netdev,rsize=8192,wsize=8192 0 0
#
#  Copy and adapt thoses four lines for every collection you planned to build. Adapt '/home/thierry/git/extra' to your 'extra' git as well.
#  
# It means:
#  localhost should have nfs-serveur running and /srv folder define in /etc/exports file
#  localhost should have http serveur to save time when installing NuTyX from your localhost
#  localhost should have a cron task to sync periodically (every hour by default) the depot
#
# 4. GET THE DEPOT and setup all the needed folders
#
#  To get all the binaries locally and used them (highly recommended) we need to rsync them, following command could do (takes quite a bit of time
#  the first time)
#
#  mkdir -p /srv/local/logs/current/x86_64/{base,cli,gui,base-extra,cli-extra,gui-extra,cinnamon,enlightenment,gnome,lxde,kde5,mate,xfce4}
#  mkdir -p /srv/local/logs/stable/x86_64/{base,cli,gui,base-extra,cli-extra,gui-extra,cinnamon,enlightenment,gnome,lxde,kde5,mate,xfce4}
#  rsync -av --delete --exclude=sources --exclude=logs --exclude=*.iso rsync://downloads.nutyx.org/nutyx/ /srv/remote/
#
# 5. GET ALL the services and tools
#
#   get rsync tar wget apache apache.service nfs-utils nfs-utils.service fcron fcron.service
#
# Adjust /etc/httpd/httpd.conf
#
#   DocumentRoot "/srv/www" -> DocumentRoot "/srv/local"
#   <Directory "/srv/www"> -> <Directory "/srv/local"> (on the next line)
#
# Add following line into /etc/exports file
#
#   /srv localhost(rw,no_root_squash,subtree_check,anonuid=99,anongid=99)
#
# Create an fcron config file:
#
#   fcrontab -e (in root)
#
#   0 * * * * rsync -av --delete --exclude=sources --exclude=logs --exclude=*.iso rsync://downloads.nutyx.org/nutyx/ /srv/remote/
#
#   means we will sync every hour at XX:00:00 up to you to adjust to what ever you like
#
#
# 6. START THE SERVICES
#
# /etc/rc.d/init.d/httpd start
# /etc/rc.d/init.d/fcron start
# /etc/rc.d/init.d/nfs-server start
#
# You are now ready to work
# You can check the log of fcron in /var/log/cron.log
# You can check the log of apache (http service) in /var/log/httpd/access.log and /var/log/httpd/error.log
# You can check the log of your builds in http://localhost/logs
#
# 7. RSYNC the remote depot your local depot
#
#   rsync -av --delete --exclude=sources --exclude=logs --exclude=*.iso /srv/remote/
#
#   You are now ready to work.
#
# 8. DONE
#
#   As you are using YOUR COPY of the depot it's up to you to rerun the rsync command from point 7.
#
# Enjoy NuTyX :)
#
#***************************************************************************************************************************************************

setup_collection() {
	local DIR
	DIR="/$VERSION/$CHROOT"
	if [ "$CHROOT" == "enlightenment" ]; then
		echo "dir /DEPOT/enlightenment-extra
dir /DEPOT/enlightenment
dir /DEPOT/gui
dir /DEPOT/cli
dir /DEPOT/base
dir /DEPOT/base-extra
base /DEPOT/base
base /DEPOT/cli
base /DEPOT/gui
logdir /var/log/pkgbuild" > $DIR/etc/cards.conf || exit 1
	fi
	if [ "$CHROOT" == "cinnamon" ]; then
		echo "dir /DEPOT/cinnamon-extra
dir /DEPOT/cinnamon
dir /DEPOT/gnome-extra
dir /DEPOT/gnome
dir /DEPOT/gui
dir /DEPOT/cli
dir /DEPOT/base
dir /DEPOT/base-extra
base /DEPOT/base
base /DEPOT/cli
base /DEPOT/gui
logdir /var/log/pkgbuild" > $DIR/etc/cards.conf || exit 1
	fi
	if [ "$CHROOT" == "lxde" ]; then
		echo "dir /DEPOT/lxde-extra
dir /DEPOT/lxde
dir /DEPOT/gui
dir /DEPOT/cli
dir /DEPOT/base
dir /DEPOT/base-extra
base /DEPOT/base
base /DEPOT/cli
base /DEPOT/gui
logdir /var/log/pkgbuild" > $DIR/etc/cards.conf || exit 1
	fi
	if [ "$CHROOT" == "xfce4" ]; then
		echo "dir /DEPOT/xfce4-extra
dir /DEPOT/xfce4
dir /DEPOT/gui
dir /DEPOT/cli
dir /DEPOT/base
dir /DEPOT/base-extra
base /DEPOT/base
base /DEPOT/cli
base /DEPOT/gui
logdir /var/log/pkgbuild" > $DIR/etc/cards.conf || exit 1
	fi
	if [ "$CHROOT" == "mate" ]; then
		echo "dir /DEPOT/mate-extra
dir /DEPOT/mate
dir /DEPOT/gui
dir /DEPOT/cli
dir /DEPOT/base
dir /DEPOT/base-extra
base /DEPOT/base
base /DEPOT/cli
base /DEPOT/gui
logdir /var/log/pkgbuild" > $DIR/etc/cards.conf || exit 1
	fi
	if [ "$CHROOT" == "gnome" ]; then
		echo "dir /DEPOT/gnome-extra
dir /DEPOT/gnome
dir /DEPOT/gui-extra
dir /DEPOT/gui
dir /DEPOT/cli-extra
dir /DEPOT/cli
dir /DEPOT/base-extra
dir /DEPOT/base
base /DEPOT/base
base /DEPOT/cli
base /DEPOT/gui
logdir /var/log/pkgbuild" > $DIR/etc/cards.conf || exit 1
	fi
	if [ "$CHROOT" == "kde5" ]; then
		echo "dir /DEPOT/kde5-extra
dir /DEPOT/kde5
dir /DEPOT/gui
dir /DEPOT/cli
dir /DEPOT/base
dir /DEPOT/base-extra
base /DEPOT/base
base /DEPOT/cli
base /DEPOT/gui
logdir /var/log/pkgbuild" > $DIR/etc/cards.conf || exit 1
	fi
	if [ "$CHROOT" == "base" ]; then
		COLLECTION="core"
		echo "dir /DEPOT/base
dir /DEPOT/base-extra
base /DEPOT/base
logdir /var/log/pkgbuild" > $DIR/etc/cards.conf || exit 1

	fi
	if [ "$CHROOT" == "cli" ]; then
		COLLECTION="core"
		echo "dir /DEPOT/cli
dir /DEPOT/base
dir /DEPOT/base-extra
base /DEPOT/base
logdir /var/log/pkgbuild" > $DIR/etc/cards.conf || exit 1
	fi
	if [ "$CHROOT" == "gui" ]; then
		COLLECTION="core"
		echo "dir /DEPOT/gui
dir /DEPOT/cli
dir /DEPOT/base
dir /DEPOT/base-extra
base /DEPOT/base
base /DEPOT/base-extra
logdir /var/log/pkgbuild" > $DIR/etc/cards.conf || exit 1
	fi
	if [ "$CHROOT" == "base-extra" ]; then
		COLLECTION="extra"
		echo "dir /DEPOT/base-extra
dir /DEPOT/base
base /DEPOT/base
base /DEPOT/base-extra" > $DIR/etc/cards.conf || exit 1
	fi
	if [ "$CHROOT" == "cli-extra" ]; then
		COLLECTION="extra"
		echo "dir /DEPOT/cli-extra
dir /DEPOT/cli
dir /DEPOT/base-extra
dir /DEPOT/base
base /DEPOT/base
base /DEPOT/base-extra
logdir /var/log/pkgbuild" > $DIR/etc/cards.conf || exit 1
	fi
	if [ "$CHROOT" == "gui-extra" ]; then
		COLLECTION="extra"
		echo "dir /DEPOT/gui-extra
dir /DEPOT/gui
dir /DEPOT/cli-extra
dir /DEPOT/cli
dir /DEPOT/base-extra
dir /DEPOT/base
base /DEPOT/base
logdir /var/log/pkgbuild" > $DIR/etc/cards.conf || exit 1
	fi
}


if [ $# -lt 1 ]; then
	echo "Specify the collection"
	exit  1
fi

if [ -d $1 ]; then
	echo "$1 exist ..."
	exit 1
fi

VERSION=`dirname $1`
CHROOT=`basename $1`
COLLECTION="$CHROOT"

mkdir -p $1/etc || exit 1

if [ "$CHROOT" == "base" ] || [ "$CHROOT" == "cli"  ] || [ "$CHROOT" == "gui"  ]; then
	setup_collection
	DEVEL="cards.devel && cd /root/$COLLECTION && bash scripts/$CHROOT"
fi

if [ "$CHROOT" == "base-extra" ] || [ "$CHROOT" == "cli-extra"  ] || [ "$CHROOT" == "gui-extra"  ]; then
	setup_collection
	DEVEL="cards.devel && cd /root/$COLLECTION && bash scripts/$CHROOT"
fi
if [ "$COLLECTION" != "core" ] && [ "$COLLECTION" != "extra"  ]; then
	setup_collection
	DEVEL="cards.devel && cd /root/$CHROOT && bash scripts/$COLLECTION -a && bash scripts/$COLLECTION-extra"
fi

if [ $# -gt 1 ]; then
	DEVEL="$DEVEL $2"
else
	DEVEL="$DEVEL -a"
fi

export DEVEL VERSION

echo "CHROOT: $CHROOT"
echo "COLLECTION: $COLLECTION"
echo "VERSION: $VERSION"
echo "The command: KERNEL="NONE" LFS="$1" bash /root/bin/install-nutyx"
echo -n "DEVEL: $DEVEL "
echo -n " OK ? (y) "
read a

if [ "$a" != "y" ]; then
	echo "Answer should be 'y'"
	rm -rv $1
	exit 1
fi

mkdir -p $1/DEPOT || exit 1
mount $1/DEPOT || exit 1

mkdir -p $1/var/log/pkgbuild || exit 1
mount $1/var/log/pkgbuild || exit 1

mkdir -p $1/sources || exit 1
mount $1/sources || exit 1

mkdir -p $1/root/$COLLECTION || exit 1
mount $1/root/$COLLECTION || exit 1


KERNEL="NONE" LFS="$1" bash /root/bin/install-nutyx

umount $1/var/log/pkgbuild || exit 1
umount $1/sources || exit 1
umount $1/DEPOT || exit 1
umount $1/root/$COLLECTION || exit 1
rm -r $1
unset VERSION DEVEL
