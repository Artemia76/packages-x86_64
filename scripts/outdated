#!/bin/bash

PACKAGES_FOLDER="$PWD"
COLLECTIONS="base cli cli-extra gui gui-extra desktops"
[ ! -z $1 ] && COLLECTIONS="$1"
ARCHGIT="/devel/git/archlinux"

echo '-------------------- ARCH PACKAGES REPOSITORY --------------------' >&2
if  [ ! -d "$HOME$ARCHGIT/packages/" ] ; then
  echo "Repository not found in $HOME$ARCHGIT/packages/"
  while true; do
    read -p "Would you like to clone packages repository? [y/n]" yn
    case $yn in
      [Yy]* )
        mkdir -p "$HOME$ARCHGIT"
        cd $HOME$ARCHGIT >&2
        git clone git://git.archlinux.org/svntogit/packages.git >&2
        cd - >&2
        break;;
      [Nn]* )
        exit;;
      * )
        echo "Cannot continue without packages repository"
        exit;;
    esac
  done
else
  while true; do
    read -p "Would you like to update packages repository? [y/N]" yn
    case $yn in
      [Yy]* )
        cd $HOME$ARCHGIT/packages/ >&2
        git pull --ff-only >&2
        cd - >&2
        break;;
      [Nn]* )
        break;;
      * )
        break;;
    esac
  done
fi

echo '-------------------- ARCH COMMUNITY REPOSITORY --------------------' >&2
if  [ ! -d "$HOME$ARCHGIT/community/" ] ; then
  echo "Repository not found in $HOME$ARCHGIT/community/"
  while true; do
      read -p "Would you like to clone community repository? [y/n]" yn
      case $yn in
          [Yy]* )
            mkdir -p "$HOME$ARCHGIT"
            cd $HOME$ARCHGIT >&2
            git clone git://git.archlinux.org/svntogit/community.git >&2
            cd - >&2
            break;;
          [Nn]* )
            exit;;
          * )
            echo "Cannot continue without community repository"
            exit;;
      esac
  done
else
  while true; do
    read -p "Would you like to update community repository? [y/N]" yn
    case $yn in
      [Yy]* )
        cd $HOME$ARCHGIT/community/ >&2
        git pull --ff-only >&2
        cd - >&2
        break;;
      [Nn]* )
        break;;
      * )
        break;;
    esac
  done
fi

NOTFOUND=""
PFn=0
PNFn=0
PODn=0
for COLLECTION in ${COLLECTIONS[@]}
do
 echo "
===> COLLECTION: $COLLECTION
"
 for i in $PACKAGES_FOLDER/$COLLECTION/*
 do
  PKGNAME=$(basename $i)
  NOTEXIST="no"
  case $PKGNAME in
    gnulib|gstreamer-0|gstreamer-plugins-base-0|\
openjdk|libatomic-ops|eigen2|make-ca|qt2|\
grub-efi|linux-mainline|cards|*cards|eudev|runyx|\
sysvinit|sysklogd|elogind|nutyx|kernel|kernel*|\
vboxhost*|nvidia*|virtualbox-guest)
     continue;;

    gtk-update-icon-cache)
     ARCHNAME="gtk3";;

    gtksharp2)
     ARCHNAME="gtk-sharp-2";;

    perl-yapp)
     ARCHNAME="perl-parse-yapp";;

    perl-pcsc)
     ARCHNAME="pcsc-perl";;

    nextcloud-desktop)
     ARCHNAME="nextcloud-client";;

    libreoffice)
     ARCHNAME="libreoffice-fresh";;

    openssl-10)
     ARCHNAME="openssl-1.0";;

    pygmentize)
     ARCHNAME="python-pygments";;

    mygpoclient)
     ARCHNAME="python-mygpoclient";;

    poppler*)
     ARCHNAME="poppler";;

    apache-ant)
     ARCHNAME="ant";;

    rustc)
     ARCHNAME="rust";;

    sdl1|libunique1)
     ARCHNAME=${PKGNAME/1/};;

    sdl)
     ARCHNAME="sdl2";;

    freetype)
     ARCHNAME="freetype2";;

    squashfs)
     ARCHNAME="squashfs-tools";;

    autoconf2-13)
     ARCHNAME="autoconf2.13";;

    inih|lrdf|yaml)
     ARCHNAME="lib${PKGNAME}";;

    libelf)
     ARCHNAME="elfutils";;

    eigen3)
     ARCHNAME="eigen";;

    fdk-aac)
     ARCHNAME="fdkaac";;

    gdk-pixbuf|glib|openjpeg)
     ARCHNAME="${PKGNAME}2";;

    gtkmm|fuse|gtksourceview|gtkspell)
     ARCHNAME="${PKGNAME}3";;

    kerberos)
     ARCHNAME="krb5";;

    lcms)
     ARCHNAME="lcms2";;

    mutagen)
     ARCHNAME="python-mutagen";;

    net-tool-cvs)
     ARCHNAME="net-tools";;

    newt)
     ARCHNAME="libnewt";;

    node)
     ARCHNAME="nodejs";;

    aspell-dict)
     ARCHNANE="aspell-fr";;

    libmpcdec)
     ARCHNAME="musepack";;

    xvid)
     ARCHNAME="xvidcore";;

    xapian)
     ARCHNAME="xapian-core";;

    tidy-html5)
     ARCHNAME="tidy";;

    vte)
     ARCHNAME="vte3";;

    perl-glib)
     ARCHNAME="glib-perl";;

    dbus-launch)
     ARCHNAME="dbus";;

    telegram)
     ARCHNAME="telegram-desktop";;
     
    transmission-qt|phonon-qt)
     ARCHNAME=${PKGNAME/-qt/};;

    dejavu-ttf)
     ARCHNAME="ttf-dejavu";;

    python-cups)
     ARCHNAME="pycups";;

    python-dbus|python-dbus-data)
     ARCHNAME="dbus-python";;

    python2-docutils|python-docutils)
     ARCHNAME="docutils";;

    freefont-ttf)
     ARCHNAME="ttf-freefont";;

    xorg-term)
     ARCHNAME="xterm";;

    xorg-font-alias)
     ARCHNAME="xorg-fonts-alias";;

    xorg-encodings)
     ARCHNAME="xorg-fonts-encodings";;

    lxde-gpicview)
     ARCHNAME="gpicview";;

    python-parsing|python-curl)
     ARCHNAME=${PKGNAME/-/-py};;

    tracker|tracker-miners)
     ARCHNAME=${PKGNAME/tracker/tracker3};;


    gtkmm2|graphite2|tracker2|tracker2-miners|python2-distutils-extra|\
python2-evdev|python2-lxml|python2-ply|python2-pyparsing|\
python2-simplejson|python2-six|python2-xdg)
     ARCHNAME=${PKGNAME/2/};;

    oxygen-icons5)
     ARCHNAME=${PKGNAME/5/};;

    xorg-fontconfig|xorg-pixman|xorg-xkeyboard-config|xorg-xbitmaps|xorg-xtrans|xorg-luit|xorg-glu|xorg-xcursor-themes)
     ARCHNAME=${PKGNAME/xorg-/};;

    sdl-*)
     ARCHNAME=${PKGNAME/sdl-/sdl2_};;

    sdl1-*)
     ARCHNAME=${PKGNAME/sdl1-/sdl_};;

    qt*)
     ARCHNAME=${PKGNAME/qt/qt5-};;

    liba52)
     ARCHNAME="a52dec";;

    live)
     ARCHNAME="live-media";;

    libzeitgeist|libostree|librest)
     ARCHNAME=${PKGNAME/lib/};;

    xorg-lib*|xorg-xf86*)
     ARCHNAME=${PKGNAME/xorg-/};;

    libindicator-gtk3|oxygen-gtk3)
     ARCHNAME=${PKGNAME/-gtk3/};;

    libfm-extra)
     ARCHNAME="libfm";;

    gstreamer-vaapi)
     ARCHNAME=$PKGNAME;;

    gstreamer-*)
     ARCHNAME=${PKGNAME/gstreamer-/gst-};;

    mate-libkbd|mate-libmixer|mate-libweather)
     ARCHNAME=${PKGNAME/mate-lib/libmate};;

    lxde-randr|lxde-terminal|lxde-panel|lxde-appearance|lxde-appearance-obconf|lxde-input|lxde-session|lxde-task)
     ARCHNAME=${PKGNAME/lxde-/lx};;

    sg3-utils|wpa-supplicant|wireless-tools|lm-sensors)
     ARCHNAME=${PKGNAME/-/_};;

    vid-stab)
     ARCHNAME=${PKGNAME/-/\.};;

    lua54-lgi)
     ARCHNAME="lgi";;


    *)
     ARCHNAME=$PKGNAME;;

  esac

  PKGBUILD="$HOME$ARCHGIT/packages/$ARCHNAME/repos/extra-x86_64/PKGBUILD"
  if  [ ! -f $PKGBUILD ] ; then
  	PKGBUILD="$HOME$ARCHGIT/packages/$ARCHNAME/repos/extra-any/PKGBUILD"
  fi
  if  [ ! -f $PKGBUILD ] ; then
  	PKGBUILD="$HOME$ARCHGIT/packages/$ARCHNAME/repos/core-x86_64/PKGBUILD"
  fi
  if  [ ! -f $PKGBUILD ] ; then
  	PKGBUILD="$HOME$ARCHGIT/packages/$ARCHNAME/repos/core-any/PKGBUILD"
  fi

  if  [ ! -f $PKGBUILD ] ; then
  	PKGBUILD="$HOME$ARCHGIT/packages/$ARCHNAME/trunk/PKGBUILD"
  fi

  if  [ ! -f $PKGBUILD ] ; then
  	PKGBUILD="$HOME$ARCHGIT/community/$ARCHNAME/repos/community-x86_64/PKGBUILD"
  fi
  if  [ ! -f $PKGBUILD ] ; then
  	PKGBUILD="$HOME$ARCHGIT/community/$ARCHNAME/repos/community-any/PKGBUILD"
  fi

  if  [ ! -f $PKGBUILD ] ; then
  	PKGBUILD="$HOME$ARCHGIT/community/$ARCHNAME/trunk/PKGBUILD"
  fi
  if  [ ! -f $PKGBUILD ] ; then
  	PKGBUILD="$HOME$ARCHGIT/$ARCHNAME/PKGBUILD"
  fi


  if [ ! -f $PKGBUILD ];then
     PNFn=$((PNFn + 1))
     NOTFOUND+="$(basename $i) "
     continue
  fi
   PFn=$((PFn + 1))
   . $i/Pkgfile
   . $PKGBUILD 2>/dev/null
   if [ -z "$pkgver" ]; then
      PNFn=$((PNFn + 1))
     NOTFOUND+="$(basename $i) "
     continue
   fi
   if [ ${pkgver%%+*} != "$version" ]; then
      PODn=$((PODn + 1))
      echo "$(basename $i) ${pkgver%%+*} ($version)"
   fi
   unset pkgver version
 done
done
echo "Packages founds: $PFn"
echo "Packages Out of date: $PODn"

[ $((PNFn)) -gt 0 ] && echo "
===> PACKAGES NOT FOUND : "$PNFn"
"

for i in ${NOTFOUND[@]}
do
 echo $i
done
